plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.platzi'
version = '1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	//buscar en maven repository https://mvnrepository.com/ "spring boot data jpa"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//buscar en maven reposiory "postgresql". usando JPA (framework acceso bbdd)
	//Lo pone runtimeonly en lugar de implementation pq no lo necesitamos mientras codificamos, sino sólo al ejecutar.
	runtimeOnly 'org.postgresql:postgresql'

	//MapStruct  https://mapstruct.org/documentation/installation/
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	//para autocompletar instalar plugin https://plugins.jetbrains.com/plugin/10036-mapstruct-support

	//Swagger: en maven repository buscar swagger2 y usar el de springfox
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	//para que swagger cree una página donde podemos ver los endpoints : swagger ui
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	//para la versión 3.0.0 también: y es ~/swagger-ui/index.html Y BAJAR EL springframework.boot a version '2.5.5'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	//compile 'io.springfox:springfox-swagger-ui:3.0.0'

	//spring boot security
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security:2.6.3'

	//seguridad con JWT Json Web Token
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'



	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
